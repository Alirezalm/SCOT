digraph "scot::TaskBase"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="scot::TaskBase",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node2 [label="scot::TaskAddDualSolution",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classscot_1_1TaskAddDualSolution.html",tooltip=" "];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node3 [label="scot::TaskAddLinearOuter\lApproximation",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classscot_1_1TaskAddLinearOuterApproximation.html",tooltip=" "];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node4 [label="scot::TaskAddQuadraticOuter\lApproximation",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classscot_1_1TaskAddQuadraticOuterApproximation.html",tooltip=" "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node5 [label="scot::TaskBcastDualSolution",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classscot_1_1TaskBcastDualSolution.html",tooltip=" "];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node6 [label="scot::TaskCheckDuration",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classscot_1_1TaskCheckDuration.html",tooltip=" "];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node7 [label="scot::TaskCheckHybridEvent",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classscot_1_1TaskCheckHybridEvent.html",tooltip=" "];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node8 [label="scot::TaskCheckSocEvent",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classscot_1_1TaskCheckSocEvent.html",tooltip=" "];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node9 [label="scot::TaskCheckTerminationGap",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classscot_1_1TaskCheckTerminationGap.html",tooltip=" "];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node10 [label="scot::TaskComputeObjectiveGap",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classscot_1_1TaskComputeObjectiveGap.html",tooltip=" "];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node11 [label="scot::TaskCreateMultiple\lTreeDualProblem",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classscot_1_1TaskCreateMultipleTreeDualProblem.html",tooltip=" "];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node12 [label="scot::TaskDistributedNlp\lSolution",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classscot_1_1TaskDistributedNlpSolution.html",tooltip=" "];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node13 [label="scot::TaskGatherLocalLinear\lOuterApproximations",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classscot_1_1TaskGatherLocalLinearOuterApproximations.html",tooltip=" "];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node14 [label="scot::TaskGatherLocalQuadratic\lOuterApproximations",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classscot_1_1TaskGatherLocalQuadraticOuterApproximations.html",tooltip=" "];
  Node1 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node15 [label="scot::TaskInitializeMultiple\lTreeDualSolver",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classscot_1_1TaskInitializeMultipleTreeDualSolver.html",tooltip=" "];
  Node1 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node16 [label="scot::TaskInitializeNewIteration",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classscot_1_1TaskInitializeNewIteration.html",tooltip=" "];
  Node1 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node17 [label="scot::TaskInitializeSingle\lTreeDualSolver",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classscot_1_1TaskInitializeSingleTreeDualSolver.html",tooltip=" "];
  Node1 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node18 [label="scot::TaskPrintIterationInfo",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classscot_1_1TaskPrintIterationInfo.html",tooltip=" "];
  Node1 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node19 [label="scot::TaskSolveDualProblem",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classscot_1_1TaskSolveDualProblem.html",tooltip=" "];
  Node1 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node20 [label="scot::TaskSolveSingleTree\lDualProblem",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classscot_1_1TaskSolveSingleTreeDualProblem.html",tooltip=" "];
}
